name: 'MT Tenant Creation'
description: 'Run the package with user-defined parameters'
inputs:
  tenant:
    description: 'The name of the new tenant to be created (i.e. JUPITER)'
    required: true
  bundleId:
    description: 'The bundle id of the new tenant to be created (i.e. com.angeleye.MT.jupiter)'
    required: true
  baseURL:
    description: 'Base url for the new tenant (i.e. MT.jmc.com). https will be automatically appended'
    required: true
  githubToken:
    description: 'GitHub token for authentication'
    required: true
runs:
  using: "composite"
  steps:
    - name: Check out the repository
      uses: actions/checkout@v4
    
    - name: Install curl (for rustup)
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y curl wget 
        curl --version  # Ensure curl is installed

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build Tenantize Release Package
      shell: bash
      run: cargo build --release
      working-directory: ${{ github.workspace }}/rust-tenantizer

    - name: List contents of the target directory
      shell: bash
      run: ls -alh ./target/release/
      working-directory: ${{ github.workspace }}/rust-tenantizer

    - name: Ensure execute permission
      shell: bash
      run: chmod +x ${{ github.workspace }}/rust-tenantizer/target/release/tenantize

    - name: Debug template directory
      shell: bash
      run: ls -alh /home/runner/work/gh-action-test/gh-action-test/rust-tenantizer/templates/
      
    - name: Run Tenantize package
      shell: bash
      run: ${{ github.workspace }}/rust-tenantizer/target/release/tenantize "${{ inputs.tenant }}" "${{ inputs.baseURL }}" "${{ inputs.bundleId }}"
      working-directory: ${{ github.workspace }}

    - name: Get GitHub User Email
      id: get_user_info
      shell: bash
      run: |
        user_email=$(curl -s -H "Authorization: token ${{ inputs.githubToken }}" https://api.github.com/users/${{ github.actor }} | jq -r '.email')
        user_name=$(curl -s -H "Authorization: token ${{ inputs.githubToken }}" https://api.github.com/users/${{ github.actor }} | jq -r '.name')
        if [ "$user_email" = "null" ]; then user_email="${{ github.actor }}@users.noreply.github.com"; fi
        echo "user_email=$user_email" >> $GITHUB_ENV
        echo "user_name=$user_name" >> $GITHUB_ENV

    - name: Configure Git
      shell: bash
      run: |
        git config --local user.name "${{ env.user_name }}"
        git config --local user.email "${{ env.user_email }}"

    - name: Commit and Push changes
      shell: bash
      run: |
        git add .
        git commit -m "Auto-commit: Added new tenant files for ${{ inputs.tenant }}"
        git push origin ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}